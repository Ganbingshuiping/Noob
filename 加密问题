/*古罗马帝国有一个拥有各种部门的强大政府组织。其中一个部门就是保密服务部门。
为了保险起见，在省与省之间传递的重要文件中的大写字母是加密的。当时最流行的加密方法是替换和重新排列。
替换方法是将所有出现的字符替换成其它的字符。有些字符会替换成它自己。
例如：替换规则可以是将'A' 到 'Y'替换成它的下一个字符，将'Z'替换成 'A'，如果原词是 "VICTORIOUS" 则它变成 "WJDUPSJPVT"。
排列方法改变原来单词中字母的顺序。
例如：将顺序例如将顺序 < 2 1 5 4 3 7 6 10 9 8 > 应用到 "VICTORIOUS" 上，则得到"IVOTCIRSUO"。
人们很快意识到单独应用替换方法或排列方法加密，都是很不保险的。
但是如果结合这两种方法，在当时就可以得到非常可靠的加密方法。
所以，很多重要信息先使用替换方法加密，再将加密的结果用排列的方法加密。用两种方法结合就可以将"VICTORIOUS" 加密成"JWPUDJSTVP"。
考古学家最近在一个石台上发现了一些信息。初看起来它们毫无意义，所以有人设想它们可能是用替换和排列的方法被加密了。
人们试着解读了石台上的密码，现在他们想检查解读的是否正确。他们需要一个计算机程序来验证，你的任务就是写这个验证程序。*/
//输入
//JWPUDJSTVP
//VICTORIOUS
#include<stdio.h>
int main()
{
    char arr_1[20]={0},arr_2[20]={0},arr_3[20]={0},ch;
    int num = 0;

    while((ch=getchar())!='\n')//输入第一行
    {
        arr_3[num] = ch;
        num++;
    }
        num = 0;
   while((ch=getchar())!='\n')//输入第二行并进行加密
   {
       if(ch>='A'&&ch<='Z')
       {
           if(ch=='Z')
              ch='A';
           else
            ch+=1;

        }

       arr_1[num]=ch;
        num++;

   }
   for(num=0;num<10;num++)
   {
   switch(num)//按照顺序排列 < 2 1 5 4 3 7 6 10 9 8 >
   {
   case 0:
      arr_2[1]=arr_1[0];break;
   case 1:
      arr_2[0]=arr_1[1];break;
   case 2:
       arr_2[4]=arr_1[2];break;
   case 3:
       arr_2[3]=arr_1[3];break;
   case 4:
       arr_2[2]=arr_1[4];break;
   case 5:
       arr_2[6]=arr_1[5];break;
   case 6:
       arr_2[5]=arr_1[6];break;
   case 7:
       arr_2[9]=arr_1[7];break;
   case 8:
       arr_2[8]=arr_1[8];break;
   case 9:
       arr_2[7]=arr_1[9];break;
       default:break;
   }
    }
    if(strcmp(arr_2,arr_3)==0)//判断结果是否相同
        printf("YES");
    else
        printf("NO");
    return 0;
}
