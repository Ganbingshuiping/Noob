#include <stdio.h>
int chect(char x) { //判断优先级
    if (x == '+' || x == '-')
        return 0;
    else if (x == '*' || x == '/')
        return 1;
    else if (x == '#' || x == '(' || x == ')')
        return -1;
}
//要求
//输入表达式，数值直接存入s2,运算符存入s1,若第二个运算符比第一个高,继续压入s1,否则弹出压入s2 
//先转成后缀表达式存入s2 
//扫描s2，数值放入s3,运算符则进行运算 
int main() {
    char s1[10]={0},s2[10]={0};
    int s3[10]={0};
    int n=-1,m=0;
    s1[m]='#';//s1的结束标志 
    for(char c;( c = getchar()) != '\n';) {
        if (c >= '0' && c <= '9') {
            n++;
            s2[n] = c;
        } else if (c == '(') {
            m++;
			s1[m]=c;
        } else if (c == ')') {//遇到右括号将s1内左括号之前全部弹出，直至左括号 
            while (s1[m] != '(') {
               		n++;
                    s2[n]=s1[m];
                        m--;
            }
            m--;//将左括号弹出 
        } else {  // 肯定是+ - * /其中一种情况
            int a = chect(c);
            int b = chect(s1[m]);
            if (a > b) { // 判断优先级,大于压栈
              	m++;
				s1[m]=c;
            } else { // 栈内优先级高，就弹栈一直到可以压栈为止
                while (a <= b) {
					n++;
                    s2[n]=s1[m];
                        m--;
                        b = chect(s1[m]);
                }
               		m++;
					s1[m]=c;
            }
        }
}
//中缀表达式输入完毕后，s1的运算符全部弹出压入s2 
for(;s1[m]!='#';m--){
	n++;
	s2[n]=s1[m];
}
//扫描s2，数值放入s3,运算符则进行运算 
for(int i=0,j=-1;i<=n;i++){
	if (s2[i] >= '0' && s2[i] <= '9') {
        j++;
		s3[j] = s2[i]-'0';//ASII码值运算 
}
	else{
		if (s2[i] == '+') {
            s3[j - 1] = s3[j - 1] + s3[j];//相当于出栈操作，运算后入栈，以下类似 
            j--;
        } else if (s2[i] == '-') {
            s3[j - 1] = s3[j - 1] - s3[j];
            j--;
        } else if (s2[i] == '*') {
            s3[j - 1] = s3[j - 1] * s3[j];
            j--;
        } else if (s2[i] == '/') {
            s3[j - 1] = s3[j - 1] / s3[j];
            j--;
}
}
}
    printf("%d\n", s3[0]);//最终结果位于栈顶 
    return 0;
}
