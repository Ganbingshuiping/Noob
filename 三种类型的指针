#include<stdio.h>
//          (arr[0]                )取某个元素 
void print_0(int *t,int row,int col)
{
	for(int i=0;i<row*col;i++)
	{
		printf("%7d",*(t+i));
		if((i+1)%col == 0)
			printf("\n");
	}
}
//          (arr                 )取二维数组的一行 
void print_1(int (*t) [8],int row)
{
	for(int i=0;i<row;i++)
	{
		 for(int j=0;j<8;j++)
			printf("%7d",*(*(t+i)+j));
		printf("\n");
	}
		printf("\n");
}
//          (&arr           )取二维数组的“方阵” 
void print_2(int (*t) [8][8],int row)
{
	for(int i=0;i<row;i++)
	{
		for(int j=0;j<8;j++)
			printf("%7d",*(*(*t+i)+j) );
		printf("\n");
	}
	printf("\n");
 } 
int main()
{
	int arr[8][8];
	for(int i=0;i<8;i++)
	{
		for(int j=0;j<8;j++)
			arr[i][j] = (i+1)*(j+1);
	}
	printf("simple way:\n");
    for(int i=0;i<8;i++)
	{
		for(int j=0;j<8;j++)
			printf("%7d",arr[i][j]);
		printf("\n");
	}
	printf("\n");
	printf("simple 指针:\n");
	print_0(arr[0],8,8);//print via(int *)
	printf("harder 指针:\n");
	print_1(arr,8);//print via (int [8])
	printf("hardest 指针:\n");
	print_2(&arr,8);//print via (int [8][8])	
	printf("\n\narr[0] = %p,arr[0]+1 = %p\n\n",arr[0],arr[0]+1);
	printf("\n\narr = %p,arr+1 = %p\n\n",arr,arr+1);
	printf("\n\n&arr = %p,&arr+1 = %p\n\n",&arr,&arr+1);
		
	return 0;
}
